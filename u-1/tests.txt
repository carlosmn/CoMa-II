3a)
octave:1> xs = [0 1 2];
octave:2> as(1) = newtonDivDiff([0], @testfun);
octave:3> as(2) = newtonDivDiff([0 1], @testfun);
octave:4> as(3) = newtonDivDiff([0 1 2], @testfun);
octave:5> evalNewtonIntPoly(xs, as, (-1/2))
ans =  0.75000

3b)
octave:1> xs = [0 1 2];
octave:2> bs = [1 0 -3];
octave:3> evalLagrangeIntPoly(xs, bs, (-1/2))
ans =  0.75000


3c)
octave:1> newtonDivDiff([0 1], @testfun)
ans = -1
octave:2> newtonDivDiff([1 2], @testfun)
ans = -3
octave:3> newtonDivDiff([0 1 2], @testfun)
ans = -1
